buildscript {
    ext {
        querydslVersion = '4.4.0'
    }
}

plugins {
    id 'org.springframework.boot' version '2.5.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}

group = 'com.ofw'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // starter web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // database
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'mysql:mysql-connector-java'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // aws
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:2.5.5'

    // oauth
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.5.0'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.5.0'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.0.3'

    //querydsl
    implementation "com.querydsl:querydsl-jpa:$querydslVersion"
    annotationProcessor "com.querydsl:querydsl-apt:$querydslVersion:jpa"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //email
    implementation 'org.springframework.boot:spring-boot-starter-mail'
}

test {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
compileQuerydsl.doFirst {
    if(file(querydslDir).exists())
        delete(file(querydslDir))
}